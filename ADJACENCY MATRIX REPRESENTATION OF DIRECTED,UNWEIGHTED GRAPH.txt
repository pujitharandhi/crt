ADJACENCY MATRIX REPRESENTATION OF DIRECTED,UNWEIGHTED GRAPH:
def addNode(v):
    if v in  graph:
        print(v,"is already prsent")
    else:
        graph[v]=[]
def show():
    for x in graph:
        print(x,":",graph[x])  
        
def addEdge(node1,node2):
    if node1 not in graph:
        print(node1,"is not available")
    elif node2 not in graph:
        print(node2,"is not available")
    else:
        graph[node1].append(node2) 
graph={}
while True:
    print()
    print("1.Addnode \n2.Addedge \n3.show \n4.Exit ")
    ch=int(input("enter choice:"))
    if ch==1:
        v=input("Enter node:")
        addNode(v)
    elif ch==2:
        node1=input("enter node1:")
        node2=input("enter node2:")
        addEdge(node1,node2)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("Invalid Choice") 
        
OUTPUT:
1.Addnode 
2.Addedge 
3.show 
4.Exit 
enter choice:1
Enter node:1

1.Addnode 
2.Addedge 
3.show 
4.Exit 
enter choice:1
Enter node:2

1.Addnode 
2.Addedge 
3.show 
4.Exit 
enter choice:1
Enter node:3

1.Addnode 
2.Addedge 
3.show 
4.Exit 
enter choice:2
enter node1:1
enter node2:2

1.Addnode 
2.Addedge 
3.show 
4.Exit 
enter choice:2
enter node1:2
enter node2:3

1.Addnode 
2.Addedge 
3.show 
4.Exit 
enter choice:2
enter node1:3
enter node2:1

1.Addnode 
2.Addedge 
3.show 
4.Exit 
enter choice:3
1 : ['2']
2 : ['3']
3 : ['1']

1.Addnode 
2.Addedge 
3.show 
4.Exit 
enter choice:4
â€‹